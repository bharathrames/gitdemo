 1.Write a blog on Difference between HTTP1.1 vs HTTP2 

answer:  

HTTP1.1: 

*It the uses works on the textual format. 
*There is head of line blocking that blocks all the requests behind it until it doesn’t get its all resources. 
*It uses requests resource In lining for use getting multiple pages. 
*It compresses data by itself. 

HTTP2: 

*It works on the binary protocol. 
*It allows multiplexing so one TCP connection is required for multiple requests.	 
*It uses PUSH frame by server that collects all multiple pages. 
*It uses HPACK for data compression. 

  
2.Write a blog about objects and its internal representation in Javascript 

answer: 

In JavaScript, an object is a standalone entity, with properties and type. Compare it with a cup,  
for example. A cup is an object, with properties. A cup has a color, a design, weight, a material it is made of, etc. 
Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each (depending on their types). 
Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value. 
Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object. 
An object can be created with figure brackets {…} with an optional list of properties. A property is a “key: value” pair, where a key is a string (also called a “property name”), and value can be anything. 
To understand this rather abstract definition, let us look at an example of a JavaScript Object : 
let school = { 
name : “Vivekananda School”, 
location : “Delhi”, 
established : “1971” 
} 
In the above example “name”, “location”, “established” are all “keys” and “Vivekananda School”, “Delhi” and 1971 are values of these keys respectively. 
Each of these keys is referred to as properties of the object. An object in JavaScript may also have a function as a member, in which case it will be known as a method of that object. 